[{"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\reportWebVitals.js":"1","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\ViewBook.js":"2","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Search.js":"3","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Journals.js":"4","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\index.js":"5","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Admin.js":"6","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Header.js":"7","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\App.js":"8","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Nav.js":"9","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Books.js":"10","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Login.js":"11","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\config\\Fire.js":"12","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\BookType.js":"13","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Contact.js":"14","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Home.js":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":2867,"mtime":1611055839687,"results":"18","hashOfConfig":"17"},{"size":780,"mtime":1606795579056,"results":"19","hashOfConfig":"17"},{"size":8461,"mtime":1611054735360,"results":"20","hashOfConfig":"17"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"17"},{"size":7849,"mtime":1611050443954,"results":"22","hashOfConfig":"17"},{"size":975,"mtime":1610637300932,"results":"23","hashOfConfig":"17"},{"size":1909,"mtime":1611054295944,"results":"24","hashOfConfig":"17"},{"size":1863,"mtime":1611050121673,"results":"25","hashOfConfig":"17"},{"size":6536,"mtime":1611050580811,"results":"26","hashOfConfig":"17"},{"size":2661,"mtime":1610728134445,"results":"27","hashOfConfig":"17"},{"size":649,"mtime":1606847423350,"results":"28","hashOfConfig":"17"},{"size":4341,"mtime":1611055437513,"results":"29","hashOfConfig":"17"},{"size":3206,"mtime":1608539952750,"results":"30","hashOfConfig":"17"},{"size":1076,"mtime":1611053426474,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ei5tuy",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\reportWebVitals.js",[],"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\ViewBook.js",["67"],"import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport fire from '../config/Fire';\r\n\r\nclass ViewBook extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            id: '',\r\n            bookName: '',\r\n            author: '',\r\n            bookType: '',\r\n            desc: '',\r\n            link:'',\r\n            img: ''\r\n         }\r\n        const id = this.props.location.state.id;\r\n        console.log(id)\r\n        this.setValue = this.setValue.bind(this);\r\n    }    \r\n\r\n    setValue(data){\r\n        this.setState({\r\n            id: data.id,\r\n            bookName: data.bookName,\r\n            author: data.author,\r\n            bookType: data.bookType,\r\n            desc: data.desc,\r\n            link:data.link,\r\n            img: data.img\r\n        })\r\n        console.log(this.state.bookName)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const id = this.props.location.state.id;\r\n        fire.firestore().collection('books')\r\n        .doc(id)\r\n        .get()\r\n        .then(doc => {\r\n        const data = doc.data();\r\n        this.setValue(data)\r\n    })\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"viewBook\">\r\n            <body>\r\n            <h1 class=\"align center\"/>\r\n            <div class=\"container\">\r\n            <div class=\"row\">\r\n            {/* <div class=\"col s6\"> */}\r\n            {/* <img class=\"responsive-img\" src={this.state.img} alt=\"Uploaded images\" height=\"300\" width=\"300\"/> */}\r\n            {/* <div class=\"container\">\r\n              <div class=\"row\"> */}\r\n                <div class=\"col s12 m4\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-image\">\r\n                        <img src={this.state.img || 'http://via.placeholder.com/500*500'} alt=\"images\" height=\"300\" width=\"400\"/>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n              {/* </div>\r\n            </div> */}\r\n            {/* </div> */}\r\n            <div class=\"col s6\">\r\n            <b><h3 class=\"flow-text\">{this.state.bookName}</h3></b><br/>\r\n            <h6 ><b>Author : </b>{this.state.author}</h6>\r\n            <h6 ><b>Type : </b>{this.state.bookType}</h6>\r\n            <h6 ><b>Description :  </b>{this.state.desc}</h6>\r\n            <h6 ><b>ID : </b>{this.state.id}</h6>\r\n            &nbsp;&nbsp;\r\n            <br/>\r\n           <a class=\"btn-large teal\" href={this.state.link}>Buy Now</a></div>\r\n          </div>\r\n          </div>\r\n          </body>\r\n          {/* <footer className=\"page-footer teal\">\r\n          <div className=\"footer-copyright\">\r\n            <div class=\"container center-align\">\r\n            <span>Â©2020 Book Worms Rack</span>\r\n            </div>\r\n          </div>\r\n        </footer> */}\r\n            \r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ViewBook);",["68","69"],"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Search.js",[],"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Journals.js",[],"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\index.js",[],"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Admin.js",["70","71"],"import React from \"react\";\r\nimport fire from '../config/Fire';\r\nimport M from 'materialize-css';\r\nimport './css/Admin.css';\r\n    \r\nexport class Admin extends React.Component {\r\n  state = {\r\n    books:[],\r\n    bookName: '',\r\n    author: '',\r\n    bookType: '',\r\n    desc: '',\r\n    imgName:'',\r\n    id:'',\r\n    link:'',\r\n    img: null\r\n}\r\n \r\ncomponentDidMount() {\r\n  const prevState = this.state.books;\r\n  fire.firestore().collection('books').onSnapshot(snapshot => {\r\n      let changes = snapshot.docChanges();\r\n      changes.forEach(change => {\r\n          if (change.type === \"added\") {\r\n              prevState.push({\r\n                  docId: change.doc.id,\r\n                  id: change.doc.data().id,\r\n                  bookName: change.doc.data().bookName,\r\n                  author: change.doc.data().author,\r\n                  bookType: change.doc.data().bookType,\r\n                  desc: change.doc.data().desc,\r\n                  link: change.doc.data().link,\r\n                  img: change.doc.data().img\r\n              })\r\n          }\r\n          this.setState({\r\n              books: prevState\r\n          })\r\n      })\r\n  })\r\n}\r\n\r\n\r\nhandleChange = (e) => {\r\n  this.setState({\r\n      [e.target.name]: e.target.value\r\n  })\r\n}\r\n\r\nhandleImg = (e) => {\r\n  if (e.target.files[0]) {\r\n      this.setState({\r\n          img: e.target.files[0]\r\n      })\r\n  }\r\n}\r\n\r\naddProduct = (bookName,author,bookType,desc,id,link,img) => {\r\n  const storage = fire.storage();\r\n  if (bookName !== '' && author !== '' && bookType !== '' && desc !== '' && img !== '' && id !== '' && link !== ''){\r\n  const uploadtask = storage.ref(`images/${img.name}`).put(img);\r\n  uploadtask.on('state_changed', snapshot => {\r\n      const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n  }, error => {\r\n      console.log(error.message);\r\n  }, \r\n  () => {\r\n      storage.ref(\"images\").child(img.name).getDownloadURL().then(url => {\r\n          fire.firestore().collection(\"books\").add({\r\n              id,\r\n              bookName,\r\n              author,\r\n              bookType,\r\n              desc,\r\n              link,\r\n              img: url\r\n          })\r\n      })\r\n  })\r\n  this.setState({\r\n    bookName: '',\r\n    author: '',\r\n    bookType: '',\r\n    desc: '',\r\n    imgName: '',\r\n    id:'',\r\n    link:'',\r\n    img: null\r\n  })\r\n  alert(\"Book has been uploaded\");\r\n  M.toast({html: 'Succuessfully Uploaded!', classes: 'green'});\r\n}\r\n\r\nelse{\r\n  this.setState({\r\n    bookName: '',\r\n    author: '',\r\n    bookType: '',\r\n    desc: '',\r\n    imgName: '',\r\n    id:'',\r\n    link:'',\r\n    img: null\r\n  })\r\n  M.toast({html: 'Please, Fill all the fields!', classes: 'red'});\r\n}\r\n}\r\n\r\nhandleSubmit = (e) => {\r\n  e.preventDefault();\r\n  this.addProduct(this.state.bookName, this.state.author,this.state.bookType, this.state.desc,this.state.id,this.state.link,this.state.img);\r\n  document.getElementById('file').value = '';\r\n}\r\n\r\nlogout(){\r\n  fire.auth().signOut();\r\n}\r\n\r\ndeletePost = (key, imgurl) => {\r\n  console.log(key);\r\n  console.log(\"hello\");\r\n  var imageRef = fire.storage(\"images\").refFromURL(imgurl)\r\n  fire.firestore().collection('books').doc(key).delete().then(() => {\r\n    console.log(\"document is successfully deleted\");\r\n    this.props.history.push(\"/\")\r\n  }).catch((error) => {\r\n    console.error(\"error is\", error);\r\n  });\r\n  imageRef.delete().then(function(){\r\n    console.log(\"image deleted\")\r\n  }).catch(function(error){\r\n    console.log(\"error while deleting image\")\r\n  });\r\n  \r\n}\r\n\r\n\r\n  render(){\r\n        return(\r\n          <div class=\"Admin\">\r\n          <header className=\"main-head\">\r\n            <ul class=\"sidenav\" id=\"Admin\">\r\n              <li>\r\n              <a class=\"waves-effect waves-light btn\">Logout</a>\r\n              </li>\r\n            </ul>\r\n          </header>\r\n            <span>\r\n             <p class=\"flow-text center-align\">Add Books</p>\r\n            </span>\r\n            <div className=\"container\"> \r\n            <div className=\"card hoverable\"> \r\n               <div className=\"card-content\">\r\n              <div class=\"input-field col s6\">\r\n                <i class=\"material-icons prefix\">book</i>\r\n                 <input name=\"bookName\" id=\"bookName\" type=\"text\" class=\"validate\"  onChange={this.handleChange} value={this.state.bookName}/>\r\n                 <label for=\"bookName\">Book Name</label>\r\n                 </div>\r\n                 <div class=\"input-field col s6\">\r\n                <i class=\"material-icons prefix\">person</i>\r\n                 <input name=\"author\" id=\"author\" type=\"text\" class=\"validate\" onChange={this.handleChange} value={this.state.author}/>\r\n                 <label for=\"author\">Author</label>\r\n                 </div>\r\n                 <div class=\"input-field col s6\">\r\n                <i class=\"material-icons prefix\">notes</i>\r\n                 <input name=\"bookType\" id=\"bookType\" type=\"text\" class=\"validate\" onChange={this.handleChange} value={this.state.bookType}/>\r\n                 <label for=\"bookType\">Book Genre</label>\r\n                 </div>\r\n                 <div class=\"input-field col s6\">\r\n                <i class=\"material-icons prefix\">mode_edit</i>\r\n                 <input name=\"desc\" id=\"desc\" type=\"text\" class=\"validate\" onChange={this.handleChange} value={this.state.desc}/>\r\n                 <label for=\"desc\">Description</label>\r\n                 </div>\r\n                 <div class=\"input-field col s6\">\r\n                <i class=\"material-icons prefix\">notes</i>\r\n                 <input name=\"id\" id=\"id\" type=\"number\" class=\"validate\" onChange={this.handleChange} value={this.state.id}/>\r\n                 <label for=\"id\">ID</label>\r\n                 </div>\r\n                 <div class=\"input-field col s6\">\r\n                <i class=\"material-icons prefix\">link</i>\r\n                 <input name=\"link\" id=\"link\" type=\"text\" class=\"validate\" onChange={this.handleChange} value={this.state.link}/>\r\n                 <label for=\"link\">Link</label>\r\n                 </div>\r\n                 <div class=\"file-field input-field\">\r\n                    <div class=\"btn\">\r\n                        <span>Image</span>\r\n                        <input type=\"file\" onChange={this.handleImg} id='file'/>\r\n                    </div>\r\n                    <div class=\"file-path-wrapper\">\r\n                        <input class=\"file-path validate\" type=\"text\" placeholder=\"Choose Book Image\" id=\"imgName\"  onChange={this.handleChange} value={this.state.imgName}/>\r\n                    </div>\r\n                    </div>\r\n                  <div class=\"but\">\r\n                  <button class=\"btn waves-effect col s6\" type=\"submit\" name=\"action\" onClick={this.handleSubmit}>Submit\r\n                     <i class=\"material-icons right\">send</i>\r\n                 </button>\r\n                 </div>\r\n               </div> \r\n             </div> \r\n         </div>\r\n\r\n\r\n         <div className=\"Displaybooks\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n          {this.state.books.map(book => (\r\n            <div className=\"book\" key={book.id}>\r\n        \r\n            <div class=\"col s12 m4\">\r\n            <div class=\"card hoverable\">\r\n                <div class=\"card-image\">\r\n                <img src={book.img || 'http://via.placeholder.com/300*150'} alt=\"Uploaded images\" height=\"300\" width=\"400\"/>\r\n                </div>\r\n                <div class=\"card-content\">\r\n                <p>{book.bookName}</p>\r\n                {/* <p>{book.id}</p>\r\n                <p>{book.docId}</p> */}\r\n                <button class = 'btn btn-danger' onClick={this.deletePost.bind(this, book.docId, book.img)}>delete</button>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n            </div>\r\n       \r\n            \r\n          ))}\r\n          </div>\r\n        </div>\r\n        </div>\r\n\r\n        </div>\r\n        );\r\n        }\r\n      }\r\n\r\nexport default Admin;","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Header.js",["72"],"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\App.js",["73"],"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Nav.js",["74","75"],"import React from 'react'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport M from 'materialize-css'\r\n\r\n\r\n\r\nclass Search extends React.Component{\r\n    componentDidMount(){\r\n        const sideNav = document.querySelector('.sidenav');\r\n        M.Sidenav.init(sideNav, {});\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"main-head\">\r\n              <div class=\"navbar-fixed\">\r\n                <nav class=\"teal\">\r\n                <div class=\"container\">\r\n                  <div class=\"nav-wrapper\">\r\n                    <a href=\"#\" class=\"brand-logo\">BestBuy</a>\r\n                    <a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\r\n                    <ul class=\"right hide-on-med-and-down\">\r\n                      <li>\r\n                        <a href=\"home\">Home</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"/\">Genre</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"books\">Books</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"/\">Contact</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                </nav>\r\n                </div>\r\n                <ul class=\"sidenav\" id=\"mobile-demo\">\r\n                  <li>\r\n                    <a href=\"home\">Home</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"/\">Genre</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"books\">Books</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#contact\">Contact</a>\r\n                  </li>\r\n                </ul>\r\n              </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Books.js",["76","77"],"import React from 'react'\r\nimport fire from '../config/Fire';\r\nimport M from 'materialize-css'\r\nimport './css/Books.css';\r\n\r\nclass Books extends React.Component{\r\n    constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        books: [],\r\n        data:''\r\n     }\r\n     this.view = this.view.bind(this);\r\n    }\r\n\r\n    view(id){\r\n        this.props.history.push(\"/book\" , id = {id})\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n      }\r\n\r\n    handleSubmitForBookName = (e) => {\r\n        e.preventDefault();\r\n        this.searchProductByBook(this.state.data);\r\n        }\r\n\r\n      handleSubmitForAuthorName = (e) => {\r\n            e.preventDefault();\r\n            this.searchProductByAuthor(this.state.data);\r\n        }\r\n\r\n     componentDidMount() {\r\n        //  Auto Complete\r\n          const ac = document.querySelector('.autocomplete');\r\n          M.Autocomplete.init(ac, {\r\n              data: {\r\n                \"Aruba\": null,\r\n                \"Cancun Mexico\": null,\r\n                \"Hawaii\": null,\r\n                \"Florida\": null,\r\n                \"California\": null,\r\n                \"Jamaica\": null,\r\n                \"Europe\": null,\r\n                \"The Bahamas\": null,\r\n              }\r\n            });\r\n\r\n        //Init Firebase\r\n        const temp = this.state.books;\r\n        fire.firestore().collection('books').onSnapshot(snapshot => {\r\n            let changes = snapshot.docChanges();\r\n            changes.forEach(change => {\r\n                if (change.type === \"added\") {\r\n                    temp.push({\r\n                        docId : change.doc.id,\r\n                        id: change.doc.data().id,\r\n                        bookName: change.doc.data().bookName,\r\n                        author: change.doc.data().author,\r\n                        bookType: change.doc.data().bookType,\r\n                        desc: change.doc.data().desc,\r\n                        link: change.doc.data().link,\r\n                        img: change.doc.data().img\r\n                    })\r\n                }\r\n                this.setState({\r\n                    books: temp\r\n                })\r\n            })\r\n        })\r\n       \r\n    }\r\n\r\n    searchProductByBook = (data) => {\r\n        this.setState({\r\n            books: []\r\n        });\r\n        fire.firestore().collection('books').where(\"bookName\", \"==\", data ).onSnapshot(querySnapshot => {\r\n            let changes = querySnapshot.docChanges();\r\n            changes.forEach(change => {\r\n                    this.state.books.push({\r\n                    //books.push({\r\n                        id: change.doc.data().id,\r\n                        bookName: change.doc.data().bookName,\r\n                        author: change.doc.data().author,\r\n                        bookType: change.doc.data().bookType,\r\n                        desc: change.doc.data().desc,\r\n                        link: change.doc.data().link,\r\n                        img: change.doc.data().img\r\n                    })\r\n                    this.setState({\r\n                        books: this.state.books\r\n                    })\r\n            })\r\n        })\r\n    }\r\n\r\n    searchProductByAuthor = (data) => {\r\n        this.setState({\r\n            books: []\r\n        });\r\n       fire.firestore().collection('books').where(\"author\", \"==\", data ).onSnapshot(querySnapshot => {\r\n           let changes = querySnapshot.docChanges();\r\n           changes.forEach(change => {\r\n               if (change.type === \"added\") {\r\n                   this.state.books.push({\r\n                       id: change.doc.data().id,\r\n                       bookName: change.doc.data().bookName,\r\n                       author: change.doc.data().author,\r\n                       bookType: change.doc.data()  .bookType,\r\n                       desc: change.doc.data().desc,\r\n                       link: change.doc.data().link,\r\n                       img: change.doc.data().img\r\n                   })\r\n               }\r\n               this.setState({\r\n                books: this.state.books\r\n               })\r\n           })\r\n       })\r\n   }\r\n    render(){\r\n         return(\r\n            <section className=\"displayBooks\">\r\n                <section id=\"search\" class=\"section section-search teal darken-1 white-text center scrollspy\">\r\n                <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s12\">\r\n                    {/* <h3>Search Your Book</h3> */}\r\n                    <div class=\"input-field\">\r\n                        <input class=\"white grey-text autocomplete\" placeholder=\"Search...\" type=\"search\" id=\"autocomplete-input\" name=\"data\" id=\"data\" onChange={this.handleChange} value={this.state.data}/>\r\n                    </div>\r\n                    </div>\r\n                    <div class=\"butt col s6 align-left\">\r\n                      <button class=\"btn s6 black-text white\" type=\"submit\" name=\"action\" onClick={this.handleSubmitForBookName}>Search by book name\r\n                         <i class=\"material-icons right\">send</i>\r\n                     </button>\r\n                     </div>\r\n                     <div className=\"but col s6 align-right\">\r\n                      <button className=\"btn col s6 black-text white\" type=\"submit\" name=\"action\" onClick={this.handleSubmitForAuthorName}>Search by author's name\r\n                         <i class=\"material-icons right\">send</i>\r\n                     </button>\r\n                     </div>\r\n                </div>\r\n                </div>\r\n            </section>\r\n\r\n             <h4 class=\"center-align\">Books</h4>\r\n            <div className=\"Displaybooks\">\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n              {this.state.books.map(book => (\r\n                <div className=\"book\" key={book.id}>\r\n                <div class=\"col s12 m4\">\r\n                <div class=\"card hoverable\" onClick={() => this.view(book.docId)}>\r\n                    <div class=\"card-image\">\r\n                        <img src={book.img || 'http://via.placeholder.com/300*150'} alt=\"Uploaded images\" height=\"300\" width=\"400\"/>\r\n                    </div>\r\n                    <div class=\"card-content\">\r\n                    <p>{book.bookName}</p>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                // </div>\r\n              ))}\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Books;","F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Login.js",[],"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\config\\Fire.js",[],"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\BookType.js",[],"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Contact.js",[],"F:\\Projects\\reactjs\\bookRecommender\\bestbuy\\src\\components\\Home.js",[],{"ruleId":"78","severity":1,"message":"79","line":52,"column":13,"nodeType":"80","endLine":52,"endColumn":39},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":63,"column":13,"nodeType":"87","messageId":"88","endLine":63,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":144,"column":15,"nodeType":"80","endLine":144,"endColumn":55},{"ruleId":"85","severity":1,"message":"91","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":11},{"ruleId":"85","severity":1,"message":"92","line":8,"column":42,"nodeType":"87","messageId":"88","endLine":8,"endColumn":52},{"ruleId":"89","severity":1,"message":"93","line":20,"column":21,"nodeType":"80","endLine":20,"endColumn":52},{"ruleId":"89","severity":1,"message":"93","line":21,"column":21,"nodeType":"80","endLine":21,"endColumn":83},{"ruleId":"94","severity":1,"message":"95","line":113,"column":34,"nodeType":"96","messageId":"97","endLine":113,"endColumn":62,"fix":"98"},{"ruleId":"99","severity":1,"message":"100","line":134,"column":143,"nodeType":"101","endLine":134,"endColumn":152},"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'progress' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Nav' is defined but never used.","'withRouter' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-whitespace-before-property","Unexpected whitespace before property bookType.","MemberExpression","unexpectedWhitespace",{"range":"104","text":"105"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",[3790,3793],"."]